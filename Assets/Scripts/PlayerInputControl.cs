//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PackagesStuff/PlayerInputControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputControl"",
    ""maps"": [
        {
            ""name"": ""PlayerOnFoot"",
            ""id"": ""71bec167-93b8-4af4-8431-7dacdcf8ea14"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""cf60e7b0-b7a2-4089-9cdb-25d5d5061bbf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ea2f8cd7-32db-4691-b708-3851d01f1102"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7c717d2d-c027-4640-b721-d52fafb4f6c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireSemi"",
                    ""type"": ""Button"",
                    ""id"": ""40293bef-6b2d-4a93-9156-e2902039eaf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireAuto"",
                    ""type"": ""Button"",
                    ""id"": ""c4e602cd-7367-472b-8908-78aa1a1a2671"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ef19b19c-4f0c-441f-9b59-314bae4e6d50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadGun"",
                    ""type"": ""Button"",
                    ""id"": ""d3ea25a8-84e7-4666-a24e-3a7440197d62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeGun"",
                    ""type"": ""Button"",
                    ""id"": ""a3b8bfa9-b1ed-4682-85d4-39bb64cc1d53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2134389c-c9af-4843-8da7-2fbb0109fd69"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""632a4643-defc-4c63-a510-7ab151c73e97"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""91303b1a-6596-48c6-a95a-db435ccd1df7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3776b6fc-2832-48a4-8d12-15ccae534c94"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cc65829e-ccec-4799-be8c-6fb19adb96c5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""432a615b-6ecf-4fb0-94cd-1ac329b54005"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dae6000d-d68f-4560-994b-5f18c03e8175"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""150d0453-7d59-4214-9aa7-ed5d96535f25"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireSemi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe0089cd-c519-4ea4-ac26-73411e8a72b4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireAuto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f20e178-1dcf-414e-b5f6-a072ba675453"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6193d419-5f8e-4214-ad62-60e6475b804a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3dc131a-3c19-4b09-b668-c0c4fc0e9ab5"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1dfdd29d-2f2c-4967-a112-7176c58ada76"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""15d9da98-376d-4800-99c9-6abc53c12c44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""93bff7fa-ddc4-475e-8e03-21a4a2811846"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerOnFoot
        m_PlayerOnFoot = asset.FindActionMap("PlayerOnFoot", throwIfNotFound: true);
        m_PlayerOnFoot_Movement = m_PlayerOnFoot.FindAction("Movement", throwIfNotFound: true);
        m_PlayerOnFoot_Jump = m_PlayerOnFoot.FindAction("Jump", throwIfNotFound: true);
        m_PlayerOnFoot_CameraMovement = m_PlayerOnFoot.FindAction("CameraMovement", throwIfNotFound: true);
        m_PlayerOnFoot_FireSemi = m_PlayerOnFoot.FindAction("FireSemi", throwIfNotFound: true);
        m_PlayerOnFoot_FireAuto = m_PlayerOnFoot.FindAction("FireAuto", throwIfNotFound: true);
        m_PlayerOnFoot_Interact = m_PlayerOnFoot.FindAction("Interact", throwIfNotFound: true);
        m_PlayerOnFoot_ReloadGun = m_PlayerOnFoot.FindAction("ReloadGun", throwIfNotFound: true);
        m_PlayerOnFoot_ChangeGun = m_PlayerOnFoot.FindAction("ChangeGun", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Inventory = m_UI.FindAction("Inventory", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerOnFoot
    private readonly InputActionMap m_PlayerOnFoot;
    private IPlayerOnFootActions m_PlayerOnFootActionsCallbackInterface;
    private readonly InputAction m_PlayerOnFoot_Movement;
    private readonly InputAction m_PlayerOnFoot_Jump;
    private readonly InputAction m_PlayerOnFoot_CameraMovement;
    private readonly InputAction m_PlayerOnFoot_FireSemi;
    private readonly InputAction m_PlayerOnFoot_FireAuto;
    private readonly InputAction m_PlayerOnFoot_Interact;
    private readonly InputAction m_PlayerOnFoot_ReloadGun;
    private readonly InputAction m_PlayerOnFoot_ChangeGun;
    public struct PlayerOnFootActions
    {
        private @PlayerInputControl m_Wrapper;
        public PlayerOnFootActions(@PlayerInputControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerOnFoot_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerOnFoot_Jump;
        public InputAction @CameraMovement => m_Wrapper.m_PlayerOnFoot_CameraMovement;
        public InputAction @FireSemi => m_Wrapper.m_PlayerOnFoot_FireSemi;
        public InputAction @FireAuto => m_Wrapper.m_PlayerOnFoot_FireAuto;
        public InputAction @Interact => m_Wrapper.m_PlayerOnFoot_Interact;
        public InputAction @ReloadGun => m_Wrapper.m_PlayerOnFoot_ReloadGun;
        public InputAction @ChangeGun => m_Wrapper.m_PlayerOnFoot_ChangeGun;
        public InputActionMap Get() { return m_Wrapper.m_PlayerOnFoot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerOnFootActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerOnFootActions instance)
        {
            if (m_Wrapper.m_PlayerOnFootActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnJump;
                @CameraMovement.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnCameraMovement;
                @CameraMovement.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnCameraMovement;
                @CameraMovement.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnCameraMovement;
                @FireSemi.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireSemi;
                @FireSemi.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireSemi;
                @FireSemi.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireSemi;
                @FireAuto.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireAuto;
                @FireAuto.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireAuto;
                @FireAuto.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnFireAuto;
                @Interact.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnInteract;
                @ReloadGun.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnReloadGun;
                @ReloadGun.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnReloadGun;
                @ReloadGun.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnReloadGun;
                @ChangeGun.started -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnChangeGun;
                @ChangeGun.performed -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnChangeGun;
                @ChangeGun.canceled -= m_Wrapper.m_PlayerOnFootActionsCallbackInterface.OnChangeGun;
            }
            m_Wrapper.m_PlayerOnFootActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @CameraMovement.started += instance.OnCameraMovement;
                @CameraMovement.performed += instance.OnCameraMovement;
                @CameraMovement.canceled += instance.OnCameraMovement;
                @FireSemi.started += instance.OnFireSemi;
                @FireSemi.performed += instance.OnFireSemi;
                @FireSemi.canceled += instance.OnFireSemi;
                @FireAuto.started += instance.OnFireAuto;
                @FireAuto.performed += instance.OnFireAuto;
                @FireAuto.canceled += instance.OnFireAuto;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @ReloadGun.started += instance.OnReloadGun;
                @ReloadGun.performed += instance.OnReloadGun;
                @ReloadGun.canceled += instance.OnReloadGun;
                @ChangeGun.started += instance.OnChangeGun;
                @ChangeGun.performed += instance.OnChangeGun;
                @ChangeGun.canceled += instance.OnChangeGun;
            }
        }
    }
    public PlayerOnFootActions @PlayerOnFoot => new PlayerOnFootActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Inventory;
    public struct UIActions
    {
        private @PlayerInputControl m_Wrapper;
        public UIActions(@PlayerInputControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Inventory => m_Wrapper.m_UI_Inventory;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Inventory.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerOnFootActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnFireSemi(InputAction.CallbackContext context);
        void OnFireAuto(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnReloadGun(InputAction.CallbackContext context);
        void OnChangeGun(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnInventory(InputAction.CallbackContext context);
    }
}
